/*
 
Creator: 
Ivan Orehovec

 */


package mpr;
import java.io.File;
import java.util.HashMap;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import static java.lang.Math.max;
import static java.lang.Math.min;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import java.util.Date; 
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import javax.swing.JOptionPane;



public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public HashMap<String, Double> Mapa = new HashMap<String, Double>();
    public Set<Isti> Same = new TreeSet<Isti>();
    public Vector<Ucenik> Ucenici = new Vector<Ucenik>();

       
    public Main() throws FileNotFoundException, IOException {
        initComponents();
         Load();        
    }

    
    public void Save() throws FileNotFoundException {
        PrintWriter writer = new PrintWriter("PODACI.txt");
         for( int i=0; i<Ucenici.size(); i++){
             String pr = Ucenici.elementAt(i).prezime;
             String im = Ucenici.elementAt(i).ime;
             String raz = Ucenici.elementAt(i).razred;
             String dat = Ucenici.elementAt(i).datum;
             String sk = Ucenici.elementAt(i).skgod;
             String br = Ucenici.elementAt(i).broj;
             writer.println(pr+ "&" + im + "&" + dat +"&" +sk +"&" + br + "&" + raz);
         }
        writer.close();
    }
    
    public void Load() throws FileNotFoundException, IOException{        
        File f = new File("PODACI.txt");
        if(f.exists() == false) {
            PrintWriter writer = new PrintWriter("PODACI.txt");
            writer.close();
        }
        Ucenici.clear();
        
              BufferedReader reader = new BufferedReader(new FileReader("PODACI.txt"));
                 String line = "";
                 
                 while ((line = reader.readLine()) != null) {
                     String[] prvi= new String[6];  int broj=0;
                     
                     prvi[0] = ""; prvi[1] = ""; prvi[2] = ""; prvi[3] ="";prvi[4]=""; prvi[5] = "";
                     
                     for( int i=0; i<line.length(); i++){
                         if(line.charAt(i) == '&'){ broj++; i++;}
                         prvi[broj] += line.charAt(i);
                     }
                     
                     Ucenik novi = new Ucenik(prvi[0], prvi[1], prvi[2], prvi[3], prvi[4], prvi[5]  );
                     
                     //provjera dal već postoji
                     boolean ok = true;
                     for( int i=0; i<Ucenici.size(); i++) {
                            Ucenik n = Ucenici.elementAt(i);
                            if( novi.prezime.equalsIgnoreCase(n.prezime) && novi.ime.equalsIgnoreCase(n.ime) && novi.datum.equalsIgnoreCase(n.datum)) ok =false;
                       }
                       
                     if( ok == true)
                     Ucenici.add(novi);
                 }
               
        //pokazuje u tablici
                
        int br = 0;
       
        for( int i=Ucenici.size()-1; i>=0 && br<99; i--){
                     
            PopisUcenika.getModel().setValueAt(Ucenici.elementAt(i).prezime, br, 0);
            PopisUcenika.getModel().setValueAt(Ucenici.elementAt(i).ime, br, 1);
            PopisUcenika.getModel().setValueAt(Ucenici.elementAt(i).datum, br, 2);
            PopisUcenika.getModel().setValueAt(Ucenici.elementAt(i).skgod, br, 3);
            PopisUcenika.getModel().setValueAt(Ucenici.elementAt(i).broj, br, 4);
            PopisUcenika.getModel().setValueAt(Ucenici.elementAt(i).razred, br, 5);
            br++;
        }        
        
      
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Prezime = new javax.swing.JTextField();
        Ime = new javax.swing.JTextField();
        Potvrda = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        PopisUcenika = new javax.swing.JTable();
        Nadnevak = new javax.swing.JTextField();
        Skgod = new javax.swing.JTextField();
        Razred = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Ispravak5 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        Ispravak2 = new javax.swing.JTextField();
        Ispravak1 = new javax.swing.JTextField();
        Ispravak4 = new javax.swing.JTextField();
        Ispravak3 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Potvrda1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        TraziPrezime = new javax.swing.JTextField();
        TraziPrezimePotvrda = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        TraziPrezime1 = new javax.swing.JTextField();
        TraziPrezimePotvrda1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        TraziPrezime2 = new javax.swing.JTextField();
        TraziPrezimePotvrda2 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        TraziPrezime3 = new javax.swing.JTextField();
        TraziPrezimePotvrda3 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        TraziPrezime4 = new javax.swing.JTextField();
        Broj = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel21 = new javax.swing.JLabel();
        Ispravakbroja = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        TraziUkupno = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        postoji = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 153));
        setPreferredSize(new java.awt.Dimension(1200, 650));

        jLabel1.setText("       Unos");

        jLabel2.setText("Prezime");

        jLabel3.setText("Ime");

        Prezime.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                PrezimeInputMethodTextChanged(evt);
            }
        });
        Prezime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PrezimeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PrezimeKeyReleased(evt);
            }
        });

        Potvrda.setText("Potvrdi");
        Potvrda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PotvrdaActionPerformed(evt);
            }
        });

        PopisUcenika.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Prezime", "Ime", "Nadnevak rođenja", "Školska godina: Prvi put upisan u matičnu knjigu", "Broj pod kojim je upisan prvi puta", "Oznaka razrednog odjeljka"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PopisUcenika);

        jLabel4.setText("Nad. rođenja");

        jLabel5.setText("Školska godina");

        jLabel6.setText("Razredni odjel");

        jLabel7.setText("Ime");

        jLabel8.setText("Školska godina");

        jLabel9.setText("Razredni odjel");

        jLabel10.setText("Prezime");

        jLabel11.setText("Nadnevak rođenja");

        Ispravak1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                Ispravak1InputMethodTextChanged(evt);
            }
        });
        Ispravak1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Ispravak1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Ispravak1KeyReleased(evt);
            }
        });

        jLabel12.setText("Ispravak posljednjeg unosa");

        Potvrda1.setText("Potvrdi");
        Potvrda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Potvrda1ActionPerformed(evt);
            }
        });

        jLabel13.setText("Tražilica");

        jLabel14.setText("Po:");

        jLabel15.setText("Prezimenu");

        TraziPrezimePotvrda.setText("Traži");
        TraziPrezimePotvrda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraziPrezimePotvrdaActionPerformed(evt);
            }
        });

        jLabel16.setText("Imenu");

        TraziPrezimePotvrda1.setText("Traži");
        TraziPrezimePotvrda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraziPrezimePotvrda1ActionPerformed(evt);
            }
        });

        jLabel17.setText("Nadnevku rođenja");

        TraziPrezimePotvrda2.setText("Traži");
        TraziPrezimePotvrda2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraziPrezimePotvrda2ActionPerformed(evt);
            }
        });

        jLabel18.setText("Školskoj godini prvog upisa");

        TraziPrezimePotvrda3.setText("Traži");
        TraziPrezimePotvrda3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraziPrezimePotvrda3ActionPerformed(evt);
            }
        });

        jLabel19.setText("Razrednom odjelu");

        jLabel20.setText("Broj upisa");

        jLabel21.setText("dd.mm.gggg");

        jLabel23.setText("Broj upisa");

        jLabel24.setText("Za ispravak posljednjeg učenika ovdje ponoviti ispravan unos.");

        jLabel25.setText("gggg");

        jLabel26.setText("/gggg+1 automatski dodaje");

        jLabel22.setText("gggg/gggg");

        jLabel27.setText("dd.mm.gggg");

        TraziUkupno.setText("Traži po svim područjima");
        TraziUkupno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TraziUkupnoActionPerformed(evt);
            }
        });

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(Ispravak1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Ispravak2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Ispravak3)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel23)
                                        .addGap(45, 45, 45)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Ispravak4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Ispravakbroja, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Ispravak5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel1)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(12, 12, 12)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel2)
                                                            .addComponent(Prezime, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Ime, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(postoji)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(Nadnevak, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                            .addComponent(jLabel21))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel5)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel20)
                                                        .addGap(45, 45, 45))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(Skgod, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(Broj, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(Razred, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel25)
                                                    .addComponent(jLabel26))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(Potvrda))))
                                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel16)
                                                        .addGap(47, 47, 47)
                                                        .addComponent(TraziPrezime1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(52, 52, 52)
                                                        .addComponent(TraziPrezimePotvrda1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel13)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel14)
                                                            .addGap(71, 71, 71)
                                                            .addComponent(jLabel15)
                                                            .addGap(47, 47, 47)
                                                            .addComponent(TraziPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(52, 52, 52)
                                                            .addComponent(TraziPrezimePotvrda, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel17)
                                                        .addGap(47, 47, 47)
                                                        .addComponent(TraziPrezime2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(52, 52, 52)
                                                        .addComponent(TraziPrezimePotvrda2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jLabel19)
                                                            .addComponent(jLabel18))
                                                        .addGap(47, 47, 47)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(TraziPrezime3, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(52, 52, 52)
                                                                .addComponent(TraziPrezimePotvrda3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(TraziPrezime4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel22)
                                                    .addComponent(jLabel27))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(362, 362, 362)
                                                .addComponent(TraziUkupno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel28))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Potvrda1)))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2)))))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Prezime, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Ime, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Nadnevak, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Skgod, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Razred, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Broj, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel20)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Potvrda)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel25)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel26)))
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel7))
                                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(Ispravak1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(Ispravak2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Ispravak3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Ispravak4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Ispravak5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Ispravakbroja, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel23))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel21)
                                .addComponent(postoji)))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Potvrda1)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(TraziPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TraziPrezimePotvrda))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(TraziPrezime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TraziPrezimePotvrda1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(TraziPrezime2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TraziPrezimePotvrda2)
                                    .addComponent(jLabel27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(TraziPrezime3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TraziPrezimePotvrda3)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(TraziPrezime4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TraziUkupno)
                                    .addComponent(jLabel28)))
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean ima( String x){
        for( int i=0; i<x.length(); i++) if (x.charAt(i) == '/') return true;
        return false;
    }
    
    private void PotvrdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PotvrdaActionPerformed
       
       String prez = Prezime.getText();
       String im = Ime.getText();
       String date = Nadnevak.getText();
       String skgod = Skgod.getText();
       String raz = Razred.getText();
       String br = Broj.getText();
       
       if( prez.equals("")) return;
       if( im.equals("")) return;
       if( date.equals("")) return;
       if( skgod.equals("")) return;
       if( raz.equals("")) return;
       if( br.equals("")) return;
       
       PopisUcenika.getModel().setValueAt("1", 0, 0);
       
       if( prez.charAt(prez.length()-1) == ' ') {
           JOptionPane.showMessageDialog(null, "Razmak na kraju prezimena!");
           return;
       }
       if( im.charAt(im.length()-1) == ' ') {
           JOptionPane.showMessageDialog(null, "Razmak na kraju imena!");
           return;
       }
       if( date.charAt(date.length()-1) == ' ') {
           JOptionPane.showMessageDialog(null, "Razmak na kraju datuma!");
           return;
       }
       if( skgod.charAt(skgod.length()-1) == ' ' || ima(skgod) == true)  {
           JOptionPane.showMessageDialog(null, "Pogrešan unos školske godine!");
           return;
       }
       
       Ucenik novi;
         
       boolean ok = true;
       
       for( int i=0; i<Ucenici.size(); i++) {
           Ucenik n = Ucenici.elementAt(i);
           if( prez.equalsIgnoreCase(n.prezime) && im.equalsIgnoreCase(n.ime) && date.equalsIgnoreCase(n.datum)) ok =false;
       }
       
       if( ok == false) {
           int k =JOptionPane.showConfirmDialog(null, "Učenik već postoji!\nNovi unos?");
           if( k == 0){
               Prezime.setText("");
       Ime.setText("");
       Nadnevak.setText("");
       Skgod.setText("");
       Razred.setText("");
       Broj.setText("");
       
           }
           return;
       }
              
       
       int broj = Integer.parseInt(skgod)+1;
       skgod+= "/" + Integer.toString(broj);
       
       novi = new Ucenik(prez, im, date, skgod,br, raz);
       Ucenici.add(novi);
       
       Prezime.setText("");
       Ime.setText("");
       Nadnevak.setText("");
       Skgod.setText("");
       Razred.setText("");
       Broj.setText("");
       
       
         try {
             Save();
         } catch (FileNotFoundException ex) {
             Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
         }
         
         try {
             Load();
         } catch (IOException ex) {
             Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
         }        
         
         return;
    }//GEN-LAST:event_PotvrdaActionPerformed
  
    private void PrezimeInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_PrezimeInputMethodTextChanged
       
               
    }//GEN-LAST:event_PrezimeInputMethodTextChanged

    private void PrezimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PrezimeKeyPressed
         
    }//GEN-LAST:event_PrezimeKeyPressed

    private void PrezimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PrezimeKeyReleased
        
    }//GEN-LAST:event_PrezimeKeyReleased

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void Ispravak1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_Ispravak1InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_Ispravak1InputMethodTextChanged

    private void Ispravak1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Ispravak1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Ispravak1KeyPressed

    private void Ispravak1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Ispravak1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_Ispravak1KeyReleased

    private void Potvrda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Potvrda1ActionPerformed
       Ucenik novi;
       Ucenik zadnji = Ucenici.elementAt(Ucenici.size()-1);
       
       
       String prez = Ispravak1.getText();   if( prez.equals("")) prez = zadnji.prezime;
       String im = Ispravak2.getText();     if( im.equals("")) im = zadnji.ime;
       String date = Ispravak3.getText();   if( date.equals("")) date = zadnji.datum;
       String skgod = Ispravak4.getText();  if( skgod.equals("")) skgod = zadnji.skgod; 
       else {
           int broj = Integer.parseInt(skgod)+1;
           skgod+= "/" + Integer.toString(broj);
       }
       String raz = Ispravak5.getText();    if( raz.equals("")) raz = zadnji.razred;
       String br = Ispravakbroja.getText(); if( br.equals("")) br = zadnji.broj;
       
       
       novi = new Ucenik(prez, im, date, skgod,br, raz);
       Ucenici.remove(Ucenici.size()-1);
       Ucenici.add(novi);
       
       Ispravak1.setText("");
       Ispravak2.setText("");
       Ispravak3.setText("");
       Ispravak4.setText("");
       Ispravak5.setText("");
       Ispravakbroja.setText("");
       
         try {
             Save();
         } catch (FileNotFoundException ex) {
             Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
         }
         
         try {
             Load();
         } catch (IOException ex) {
             Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
         }   
    }//GEN-LAST:event_Potvrda1ActionPerformed
    public boolean nastavak( String prvi,String drugi){
        
        if (drugi.length() >= prvi.length() ) {            
            for( int i=0; i<prvi.length(); i++) 
                if( Character.toLowerCase(prvi.charAt(i)) != Character.toLowerCase(drugi.charAt(i))) 
                    return false;
        return true;
        }
        
        for( int i=0; i<drugi.length(); i++) 
                if( Character.toLowerCase(prvi.charAt(i)) != Character.toLowerCase(drugi.charAt(i))) 
                    return false;
        
        return true;
    }
    
    public boolean slicni (String x, String y){
        double kolko = 0;
        double veci = max( x.length(), y.length()) * 0.67 ;
        
        for( int i=0; i<min(x.length(), y.length()); i++)
            if( Character.toLowerCase(x.charAt(i)) == Character.toLowerCase(y.charAt(i)) ) kolko++;
        
        if (kolko >= veci)
        return true;
        
        return false;
    }
    public void Traziprezime( String trazeno) throws FileNotFoundException{
        PrintWriter out = new PrintWriter(trazeno+".xls");
        
        Vector<Ucenik> bili = new Vector<>();
        
        // isti
        for( int i=0; i<Ucenici.size(); i++ ){
            if( trazeno.equalsIgnoreCase(Ucenici.elementAt(i).prezime)  ){
                Ucenik ok = Ucenici.elementAt(i);
                bili.add(ok);
                
                out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred);
            }
        }
        out.println("Slično: ");
        // pocinju
        for( int i=0; i<Ucenici.size(); i++ ){
            if( bili.contains(Ucenici.elementAt(i)) == false){
            if( nastavak( trazeno, Ucenici.elementAt(i).prezime) == true ){
                Ucenik ok = Ucenici.elementAt(i);
                bili.add(ok);out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred);}
        }}
        //slicni
        for( int i=0; i<Ucenici.size(); i++ ){
            if( bili.contains(Ucenici.elementAt(i)) == false){
            if( slicni(trazeno, Ucenici.elementAt(i).prezime) == true ){
                Ucenik ok = Ucenici.elementAt(i);
                bili.add(ok);out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred); }
        }}
        out.close();
    }
    
    public void Traziime( String trazeno) throws FileNotFoundException{
        PrintWriter out = new PrintWriter(trazeno+".xls");
        
        Vector<Ucenik> bili = new Vector<>();
        
        for( int i=0; i<Ucenici.size(); i++ ){
            if( trazeno.equalsIgnoreCase(Ucenici.elementAt(i).ime)  ){
                Ucenik ok = Ucenici.elementAt(i);
                bili.add(ok);
                out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred); }
        }
        // pocinju
        out.println("Slično: ");
        for( int i=0; i<Ucenici.size(); i++ ){
            if( bili.contains(Ucenici.elementAt(i)) == false){
            if( nastavak( trazeno, Ucenici.elementAt(i).ime) == true ){
                Ucenik ok = Ucenici.elementAt(i);
                bili.add(ok);
                out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred); }
        }}
        //slicni
        for( int i=0; i<Ucenici.size(); i++ ){
            if( bili.contains(Ucenici.elementAt(i)) == false){
            if( slicni(trazeno, Ucenici.elementAt(i).ime) == true ){
                Ucenik ok = Ucenici.elementAt(i);
                bili.add(ok);
                out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred);  }
        }}
        
        out.close();
    } 
    
    public void Trazidatum( String trazeno) throws FileNotFoundException{
        PrintWriter out = new PrintWriter(trazeno+".xls");
        
        for( int i=0; i<Ucenici.size(); i++ ){
            if( trazeno.equalsIgnoreCase(Ucenici.elementAt(i).datum)  ){
                Ucenik ok = Ucenici.elementAt(i);
                out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred);}
        }
        
        out.close();
    }
    public void Traziskgod( String trazeno) throws FileNotFoundException{
        String tr = trazeno.replaceAll("/", "-");
        PrintWriter out = new PrintWriter(tr+"godina"+".xls");
        
     
        for( int i=0; i<Ucenici.size(); i++ ){
            if( trazeno.equalsIgnoreCase(Ucenici.elementAt(i).skgod)  ){
                Ucenik ok = Ucenici.elementAt(i);
                //int broj = Integer.parseInt(Ucenici.elementAt(i).skgod)+1;
               out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred); }
        }
        
        out.close();
    }
    
    public void TraziSve( String prez, String im, String dat, String skgod, String odjel) throws FileNotFoundException{
        PrintWriter out = null;
        String skg= skgod.replaceAll("/", "-");
        if( prez.equals("") && im.equals("") && dat.equals("") && skgod.equals("") && odjel.equals(""))
            out = new PrintWriter("Svi.xls");
        else
        out = new PrintWriter(prez+im+dat+skg+odjel+".xls");
        
        for( int i=0; i<Ucenici.size(); i++ ){
            if( (prez.equalsIgnoreCase(Ucenici.elementAt(i).prezime) || prez.equals("")) && (im.equalsIgnoreCase(Ucenici.elementAt(i).ime) || im.equals("")) && (dat.equalsIgnoreCase(Ucenici.elementAt(i).datum) || dat.equals("")) &&(skgod.equalsIgnoreCase(Ucenici.elementAt(i).skgod) || skgod.equals(""))  && (odjel.equalsIgnoreCase(Ucenici.elementAt(i).razred) || odjel.equals(""))){
                Ucenik ok = Ucenici.elementAt(i);
                //int broj = Integer.parseInt(Ucenici.elementAt(i).skgod)+1;
                out.print(ok.prezime+ "   " + ok.ime);
                int k= 37-ok.prezime.length()-ok.ime.length();
                for( int z= 0; z<k*(10/6); z++) out.print(" ");
              
                out.println(ok.datum + "    " + ok.broj + "    " + ok.skgod + "    " + ok.razred);}
        }
        
        out.close();
    }
    
    private void TraziPrezimePotvrdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraziPrezimePotvrdaActionPerformed
    
        String trazeno = TraziPrezime.getText();    
        TraziPrezime.setText("");
        
        try {
            Traziprezime(trazeno);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_TraziPrezimePotvrdaActionPerformed

    private void TraziUkupnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraziUkupnoActionPerformed
        try {
            TraziSve(TraziPrezime.getText(),TraziPrezime1.getText(),TraziPrezime2.getText(),TraziPrezime3.getText(),TraziPrezime4.getText()  );
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        TraziPrezime.setText("");
         TraziPrezime1.setText("");
          TraziPrezime2.setText(""); 
           TraziPrezime3.setText("");
            TraziPrezime4.setText("");
    }//GEN-LAST:event_TraziUkupnoActionPerformed

    private void TraziPrezimePotvrda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraziPrezimePotvrda1ActionPerformed
        String trazeno = TraziPrezime1.getText();    
        TraziPrezime1.setText("");
        
        try {
            Traziime(trazeno);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_TraziPrezimePotvrda1ActionPerformed

    private void TraziPrezimePotvrda2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraziPrezimePotvrda2ActionPerformed
        String trazeno = TraziPrezime2.getText();    
        TraziPrezime2.setText("");
        
        try {
            Trazidatum(trazeno);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_TraziPrezimePotvrda2ActionPerformed

    private void TraziPrezimePotvrda3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TraziPrezimePotvrda3ActionPerformed
        String trazeno = TraziPrezime3.getText();    
        TraziPrezime3.setText("");
        
        try {
            Traziskgod(trazeno);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_TraziPrezimePotvrda3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException, IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Broj;
    private javax.swing.JTextField Ime;
    private javax.swing.JTextField Ispravak1;
    private javax.swing.JTextField Ispravak2;
    private javax.swing.JTextField Ispravak3;
    private javax.swing.JTextField Ispravak4;
    private javax.swing.JTextField Ispravak5;
    private javax.swing.JTextField Ispravakbroja;
    private javax.swing.JTextField Nadnevak;
    private javax.swing.JTable PopisUcenika;
    private javax.swing.JButton Potvrda;
    private javax.swing.JButton Potvrda1;
    private javax.swing.JTextField Prezime;
    private javax.swing.JTextField Razred;
    private javax.swing.JTextField Skgod;
    private javax.swing.JTextField TraziPrezime;
    private javax.swing.JTextField TraziPrezime1;
    private javax.swing.JTextField TraziPrezime2;
    private javax.swing.JTextField TraziPrezime3;
    private javax.swing.JTextField TraziPrezime4;
    private javax.swing.JButton TraziPrezimePotvrda;
    private javax.swing.JButton TraziPrezimePotvrda1;
    private javax.swing.JButton TraziPrezimePotvrda2;
    private javax.swing.JButton TraziPrezimePotvrda3;
    private javax.swing.JButton TraziUkupno;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel postoji;
    // End of variables declaration//GEN-END:variables

}
